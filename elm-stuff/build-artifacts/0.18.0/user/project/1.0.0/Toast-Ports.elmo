var _user$project$Toast_Ports$notify = _elm_lang$core$Native_Platform.incomingPort(
	'notify',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (title) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (body) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (url) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (style) {
									return _elm_lang$core$Json_Decode$succeed(
										{title: title, body: body, url: url, style: style});
								},
								A2(_elm_lang$core$Json_Decode$field, 'style', _elm_lang$core$Json_Decode$string));
						},
						A2(
							_elm_lang$core$Json_Decode$field,
							'url',
							_elm_lang$core$Json_Decode$oneOf(
								{
									ctor: '::',
									_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
									_1: {
										ctor: '::',
										_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
										_1: {ctor: '[]'}
									}
								})));
				},
				A2(_elm_lang$core$Json_Decode$field, 'body', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)));
var _user$project$Toast_Ports$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$Toast_Ports$notify(_user$project$Toast_Types$AddToast),
			_1: {ctor: '[]'}
		});
};
